

================================================================
== Vivado HLS Report for 'dut'
================================================================
* Date:           Thu Nov 30 22:59:45 2023

* Version:        2019.2.1 (Build 2724168 on Thu Dec 05 05:19:09 MST 2019)
* Project:        softmax_proj.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.232 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+----------+----------+-----------+--------+----------+---------+
    |  Latency (cycles)  |  Latency (absolute)  |      Interval     | Pipeline|
    |   min   |    max   |    min   |    max    |   min  |    max   |   Type  |
    +---------+----------+----------+-----------+--------+----------+---------+
    |   516229|  38532229| 5.162 ms | 0.385 sec |  516229|  38532229|   none  |
    +---------+----------+----------+-----------+--------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |      128|      128|         1|          -|          -|   128|    no    |
        |- Loop 2  |      256|      256|         2|          -|          -|   128|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 4 
4 --> 5 
5 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(float* %strm_out_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 6 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecInterface(float* %strm_in_a_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 7 'specinterface' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %strm_in_a_V), !map !30"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %strm_out_V), !map !34"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @dut_str) nounwind"   --->   Operation 10 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%input1 = alloca [128 x float], align 16" [softmax.cpp:9]   --->   Operation 11 'alloca' 'input1' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%output = alloca [128 x float], align 16"   --->   Operation 12 'alloca' 'output' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_1 : Operation 13 [1/1] (1.76ns)   --->   "br label %1" [softmax.cpp:14]   --->   Operation 13 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 6.88>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i_0 = phi i8 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 14 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.55ns)   --->   "%icmp_ln14 = icmp eq i8 %i_0, -128" [softmax.cpp:14]   --->   Operation 15 'icmp' 'icmp_ln14' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)"   --->   Operation 16 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.91ns)   --->   "%i = add i8 %i_0, 1" [softmax.cpp:14]   --->   Operation 17 'add' 'i' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %icmp_ln14, label %3, label %2" [softmax.cpp:14]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (3.63ns)   --->   "%tmp_1 = call float @_ssdm_op_Read.ap_fifo.volatile.floatP(float* %strm_in_a_V)" [softmax.cpp:15]   --->   Operation 19 'read' 'tmp_1' <Predicate = (!icmp_ln14)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 0> <FIFO>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i8 %i_0 to i64" [softmax.cpp:16]   --->   Operation 20 'zext' 'zext_ln16' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%input1_addr = getelementptr inbounds [128 x float]* %input1, i64 0, i64 %zext_ln16" [softmax.cpp:16]   --->   Operation 21 'getelementptr' 'input1_addr' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (3.25ns)   --->   "store float %tmp_1, float* %input1_addr, align 4" [softmax.cpp:16]   --->   Operation 22 'store' <Predicate = (!icmp_ln14)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br label %1" [softmax.cpp:14]   --->   Operation 23 'br' <Predicate = (!icmp_ln14)> <Delay = 0.00>
ST_2 : Operation 24 [2/2] (0.00ns)   --->   "call fastcc void @"softmax<128>"([128 x float]* %input1, [128 x float]* %output)" [softmax.cpp:20]   --->   Operation 24 'call' <Predicate = (icmp_ln14)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 1.76>
ST_3 : Operation 25 [1/2] (0.00ns)   --->   "call fastcc void @"softmax<128>"([128 x float]* %input1, [128 x float]* %output)" [softmax.cpp:20]   --->   Operation 25 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 26 [1/1] (1.76ns)   --->   "br label %4" [softmax.cpp:23]   --->   Operation 26 'br' <Predicate = true> <Delay = 1.76>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "%i1_0 = phi i8 [ 0, %3 ], [ %i_1, %5 ]"   --->   Operation 27 'phi' 'i1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 28 [1/1] (1.55ns)   --->   "%icmp_ln23 = icmp eq i8 %i1_0, -128" [softmax.cpp:23]   --->   Operation 28 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)"   --->   Operation 29 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 30 [1/1] (1.91ns)   --->   "%i_1 = add i8 %i1_0, 1" [softmax.cpp:23]   --->   Operation 30 'add' 'i_1' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23, label %6, label %5" [softmax.cpp:23]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i8 %i1_0 to i64" [softmax.cpp:24]   --->   Operation 32 'zext' 'zext_ln24' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%output_addr = getelementptr inbounds [128 x float]* %output, i64 0, i64 %zext_ln24" [softmax.cpp:24]   --->   Operation 33 'getelementptr' 'output_addr' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 34 [2/2] (3.25ns)   --->   "%tmp = load float* %output_addr, align 4" [softmax.cpp:24]   --->   Operation 34 'load' 'tmp' <Predicate = (!icmp_ln23)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "ret void" [softmax.cpp:26]   --->   Operation 35 'ret' <Predicate = (icmp_ln23)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 6.88>
ST_5 : Operation 36 [1/2] (3.25ns)   --->   "%tmp = load float* %output_addr, align 4" [softmax.cpp:24]   --->   Operation 36 'load' 'tmp' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_5 : Operation 37 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %strm_out_V, float %tmp)" [softmax.cpp:24]   --->   Operation 37 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 0> <FIFO>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "br label %4" [softmax.cpp:23]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', softmax.cpp:14) [12]  (1.77 ns)

 <State 2>: 6.89ns
The critical path consists of the following:
	fifo read on port 'strm_in_a_V' (softmax.cpp:15) [18]  (3.63 ns)
	'store' operation ('store_ln16', softmax.cpp:16) of variable 'tmp', softmax.cpp:15 on array 'input1', softmax.cpp:9 [21]  (3.25 ns)

 <State 3>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', softmax.cpp:23) [27]  (1.77 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', softmax.cpp:23) [27]  (0 ns)
	'getelementptr' operation ('din', softmax.cpp:24) [34]  (0 ns)
	'load' operation ('tmp', softmax.cpp:24) on array 'output' [35]  (3.25 ns)

 <State 5>: 6.89ns
The critical path consists of the following:
	'load' operation ('tmp', softmax.cpp:24) on array 'output' [35]  (3.25 ns)
	fifo write on port 'strm_out_V' (softmax.cpp:24) [36]  (3.63 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
