// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_128_s_HH_
#define _softmax_128_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_fadd_32ns_32ncud.h"
#include "dut_fmul_32ns_32ndEe.h"
#include "dut_fdiv_32ns_32neOg.h"
#include "dut_sitofp_32ns_3fYi.h"
#include "dut_fptrunc_64ns_g8j.h"
#include "dut_fpext_32ns_64hbi.h"
#include "dut_dadd_64ns_64nibs.h"
#include "dut_dmul_64ns_64njbC.h"
#include "softmax_128_s_eulbkb.h"

namespace ap_rtl {

struct softmax_128_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > output_layer_address0;
    sc_out< sc_logic > output_layer_ce0;
    sc_in< sc_lv<32> > output_layer_q0;
    sc_out< sc_lv<7> > probability_distribu_address0;
    sc_out< sc_logic > probability_distribu_ce0;
    sc_out< sc_logic > probability_distribu_we0;
    sc_out< sc_lv<32> > probability_distribu_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    softmax_128_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_128_s);

    ~softmax_128_s();

    sc_trace_file* mVcdFile;

    softmax_128_s_eulbkb* euler_sums_U;
    dut_fadd_32ns_32ncud<1,5,32,32,32>* dut_fadd_32ns_32ncud_U1;
    dut_fmul_32ns_32ndEe<1,4,32,32,32>* dut_fmul_32ns_32ndEe_U2;
    dut_fdiv_32ns_32neOg<1,16,32,32,32>* dut_fdiv_32ns_32neOg_U3;
    dut_sitofp_32ns_3fYi<1,6,32,32>* dut_sitofp_32ns_3fYi_U4;
    dut_fptrunc_64ns_g8j<1,2,64,32>* dut_fptrunc_64ns_g8j_U5;
    dut_fpext_32ns_64hbi<1,2,32,64>* dut_fpext_32ns_64hbi_U6;
    dut_dadd_64ns_64nibs<1,5,64,64,64>* dut_dadd_64ns_64nibs_U7;
    dut_dmul_64ns_64njbC<1,6,64,64,64>* dut_dmul_64ns_64njbC_U8;
    sc_signal< sc_lv<69> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > grp_fu_177_p2;
    sc_signal< sc_lv<32> > reg_203;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state68;
    sc_signal< sc_lv<64> > grp_fu_189_p1;
    sc_signal< sc_lv<64> > reg_209;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_lv<8> > i_fu_221_p2;
    sc_signal< sc_lv<8> > i_reg_280;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > euler_sums_addr_reg_285;
    sc_signal< sc_lv<1> > icmp_ln16_fu_215_p2;
    sc_signal< sc_lv<32> > output_layer_load_reg_295;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > zext_ln19_fu_233_p1;
    sc_signal< sc_lv<32> > zext_ln19_reg_300;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > k_fu_248_p2;
    sc_signal< sc_lv<32> > k_reg_311;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln21_fu_243_p2;
    sc_signal< sc_lv<7> > add_ln19_fu_254_p2;
    sc_signal< sc_lv<7> > add_ln19_reg_316;
    sc_signal< sc_lv<32> > grp_fu_182_p1;
    sc_signal< sc_lv<32> > tmp_6_reg_321;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > grp_fu_198_p2;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<64> > grp_fu_193_p2;
    sc_signal< sc_lv<64> > tmp_4_reg_331;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_lv<32> > grp_fu_186_p1;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_lv<32> > grp_fu_171_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_341;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_lv<32> > grp_fu_166_p2;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_lv<8> > j_fu_266_p2;
    sc_signal< sc_lv<8> > j_reg_355;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_lv<64> > zext_ln33_fu_272_p1;
    sc_signal< sc_lv<64> > zext_ln33_reg_360;
    sc_signal< sc_lv<1> > icmp_ln32_fu_260_p2;
    sc_signal< sc_lv<32> > euler_sums_q0;
    sc_signal< sc_lv<32> > euler_sums_load_reg_370;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< sc_lv<7> > euler_sums_address0;
    sc_signal< sc_logic > euler_sums_ce0;
    sc_signal< sc_logic > euler_sums_we0;
    sc_signal< sc_lv<8> > i_0_reg_84;
    sc_signal< sc_lv<32> > euler_layer_sum_0_reg_95;
    sc_signal< sc_lv<32> > empty_4_reg_107;
    sc_signal< sc_lv<7> > indvars_iv_reg_119;
    sc_signal< sc_lv<64> > term_0_reg_131;
    sc_signal< sc_lv<1> > icmp_ln19_fu_237_p2;
    sc_signal< sc_lv<32> > k_0_reg_143;
    sc_signal< sc_lv<8> > j1_0_reg_155;
    sc_signal< sc_logic > ap_CS_fsm_state69;
    sc_signal< sc_lv<64> > zext_ln18_fu_227_p1;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_lv<32> > grp_fu_177_p0;
    sc_signal< sc_lv<32> > grp_fu_177_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state53;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_lv<32> > grp_fu_189_p0;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_lv<69> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<69> ap_ST_fsm_state1;
    static const sc_lv<69> ap_ST_fsm_state2;
    static const sc_lv<69> ap_ST_fsm_state3;
    static const sc_lv<69> ap_ST_fsm_state4;
    static const sc_lv<69> ap_ST_fsm_state5;
    static const sc_lv<69> ap_ST_fsm_state6;
    static const sc_lv<69> ap_ST_fsm_state7;
    static const sc_lv<69> ap_ST_fsm_state8;
    static const sc_lv<69> ap_ST_fsm_state9;
    static const sc_lv<69> ap_ST_fsm_state10;
    static const sc_lv<69> ap_ST_fsm_state11;
    static const sc_lv<69> ap_ST_fsm_state12;
    static const sc_lv<69> ap_ST_fsm_state13;
    static const sc_lv<69> ap_ST_fsm_state14;
    static const sc_lv<69> ap_ST_fsm_state15;
    static const sc_lv<69> ap_ST_fsm_state16;
    static const sc_lv<69> ap_ST_fsm_state17;
    static const sc_lv<69> ap_ST_fsm_state18;
    static const sc_lv<69> ap_ST_fsm_state19;
    static const sc_lv<69> ap_ST_fsm_state20;
    static const sc_lv<69> ap_ST_fsm_state21;
    static const sc_lv<69> ap_ST_fsm_state22;
    static const sc_lv<69> ap_ST_fsm_state23;
    static const sc_lv<69> ap_ST_fsm_state24;
    static const sc_lv<69> ap_ST_fsm_state25;
    static const sc_lv<69> ap_ST_fsm_state26;
    static const sc_lv<69> ap_ST_fsm_state27;
    static const sc_lv<69> ap_ST_fsm_state28;
    static const sc_lv<69> ap_ST_fsm_state29;
    static const sc_lv<69> ap_ST_fsm_state30;
    static const sc_lv<69> ap_ST_fsm_state31;
    static const sc_lv<69> ap_ST_fsm_state32;
    static const sc_lv<69> ap_ST_fsm_state33;
    static const sc_lv<69> ap_ST_fsm_state34;
    static const sc_lv<69> ap_ST_fsm_state35;
    static const sc_lv<69> ap_ST_fsm_state36;
    static const sc_lv<69> ap_ST_fsm_state37;
    static const sc_lv<69> ap_ST_fsm_state38;
    static const sc_lv<69> ap_ST_fsm_state39;
    static const sc_lv<69> ap_ST_fsm_state40;
    static const sc_lv<69> ap_ST_fsm_state41;
    static const sc_lv<69> ap_ST_fsm_state42;
    static const sc_lv<69> ap_ST_fsm_state43;
    static const sc_lv<69> ap_ST_fsm_state44;
    static const sc_lv<69> ap_ST_fsm_state45;
    static const sc_lv<69> ap_ST_fsm_state46;
    static const sc_lv<69> ap_ST_fsm_state47;
    static const sc_lv<69> ap_ST_fsm_state48;
    static const sc_lv<69> ap_ST_fsm_state49;
    static const sc_lv<69> ap_ST_fsm_state50;
    static const sc_lv<69> ap_ST_fsm_state51;
    static const sc_lv<69> ap_ST_fsm_state52;
    static const sc_lv<69> ap_ST_fsm_state53;
    static const sc_lv<69> ap_ST_fsm_state54;
    static const sc_lv<69> ap_ST_fsm_state55;
    static const sc_lv<69> ap_ST_fsm_state56;
    static const sc_lv<69> ap_ST_fsm_state57;
    static const sc_lv<69> ap_ST_fsm_state58;
    static const sc_lv<69> ap_ST_fsm_state59;
    static const sc_lv<69> ap_ST_fsm_state60;
    static const sc_lv<69> ap_ST_fsm_state61;
    static const sc_lv<69> ap_ST_fsm_state62;
    static const sc_lv<69> ap_ST_fsm_state63;
    static const sc_lv<69> ap_ST_fsm_state64;
    static const sc_lv<69> ap_ST_fsm_state65;
    static const sc_lv<69> ap_ST_fsm_state66;
    static const sc_lv<69> ap_ST_fsm_state67;
    static const sc_lv<69> ap_ST_fsm_state68;
    static const sc_lv<69> ap_ST_fsm_state69;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<7> ap_const_lv7_2;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<32> ap_const_lv32_44;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_402DF854;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<7> ap_const_lv7_66;
    static const sc_lv<7> ap_const_lv7_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln19_fu_254_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state68();
    void thread_ap_CS_fsm_state69();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_euler_sums_address0();
    void thread_euler_sums_ce0();
    void thread_euler_sums_we0();
    void thread_grp_fu_177_p0();
    void thread_grp_fu_177_p1();
    void thread_grp_fu_189_p0();
    void thread_i_fu_221_p2();
    void thread_icmp_ln16_fu_215_p2();
    void thread_icmp_ln19_fu_237_p2();
    void thread_icmp_ln21_fu_243_p2();
    void thread_icmp_ln32_fu_260_p2();
    void thread_j_fu_266_p2();
    void thread_k_fu_248_p2();
    void thread_output_layer_address0();
    void thread_output_layer_ce0();
    void thread_probability_distribu_address0();
    void thread_probability_distribu_ce0();
    void thread_probability_distribu_d0();
    void thread_probability_distribu_we0();
    void thread_zext_ln18_fu_227_p1();
    void thread_zext_ln19_fu_233_p1();
    void thread_zext_ln33_fu_272_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
